ID,Context,Module,Task,Priority,Status,Assignee,Due,Notes
1,UI,Shell,"Initialize the React project using a standard toolchain (e.g., Vite or Create React App). The project name must be 'languageui'. Ensure the initial file structure is clean and ready for modular development.",High,Done,Coder,2025-06-26,"Coder must ensure no multi-word identifiers are present in the initial boilerplate file names or component names they control. For example, if the tool creates 'App.js', it is acceptable, but any new component must follow the single-word rule."
2,UI,Core,"Set up the single source of truth for design tokens in `theme.ts` (color, typography, shadow, etc.).",High,Done,Coder,2025-06-27,"Completed as part of Atomic UI foundation. Ref: TODO-001, TODO-006"
3,UI,Atom,"Build a centralized `Icon` component to dynamically render SVGs from a dedicated asset folder.",High,Done,Coder,2025-06-27,"Completed as part of Atomic UI foundation. Ref: TODO-005"
4,UI,Atom,"Implement a dynamic and reusable `Button` component based on variants, sizes, and theme tokens.",High,Done,Coder,2025-06-27,"Completed as part of Atomic UI foundation. Ref: TODO-002"
5,Project,Maintenance,"Clean up boilerplate code and files from the initial project setup.",Medium,Done,Coder,2025-06-27,"Completed as part of Atomic UI foundation. Ref: TODO-004, TODO-007"
6,Architecture,Adapter,"Create the directory structure for the new Adapter layer.",High,Done,Coder,2025-06-28,"Ref: TODO-008"
7,Architecture,Adapter,"Implement the adapter for the `react` library.",High,Done,Coder,2025-06-28,"Ref: TODO-009"
8,Architecture,Adapter,"Implement the adapter for `styled-components`.",High,Done,Coder,2025-06-28,"Ref: TODO-010"
9,Architecture,Adapter,"Implement the adapter for `react-dom/client`.",High,Done,Coder,2025-06-28,"Ref: TODO-011"
10,Architecture,Refactor,"Refactor the entire codebase to use the new Adapter layer instead of direct library imports.",High,Done,Coder,2025-06-28,"Ref: TODO-012"
13,UI,Core,"Extend the core theme by adding a comprehensive set of shadow tokens, categorized into primary, secondary, and neutral variants.",High,Done,Coder,2025-06-25,"Ref: TODO-013"
14,UI,Atom,"Build a reusable Card component that dynamically applies shadows from the theme, replacing repetitive styling.",High,Done,Coder,2025-06-25,"Ref: TODO-014"
15,UI,Atom,"Develop a set of typography components (Title, Subtitle, Text) to ensure consistent text styling across the application.",High,Done,Coder,2025-06-25,"Ref: TODO-015"
16,UI,Showcase,"Create a Showcase page to visually demonstrate all design tokens and components, providing a live style guide.",High,Done,Coder,2025-06-25,"Ref: TODO-016"
17,Project,Maintenance,"Verify that no temporary Figma-generated files existed, ensuring a clean codebase.",Medium,Done,Coder,2025-06-25,"Ref: TODO-017"
18,UI,Core,"Enrich the theme's color palette by replacing the existing color object with a comprehensive new structure.",High,Done,Coder,2025-06-25,"Ref: TODO-018"
19,UI,Atom,"Build a reusable Swatch component to visually represent a color and its metadata.",High,Done,Coder,2025-06-25,"Ref: TODO-019"
20,UI,Showcase,"Upgrade the Showcase page to dynamically render the entire color palette from the theme.",High,Done,Coder,2025-06-25,"Ref: TODO-020"
21,Project,Maintenance,"Scan the codebase and remove any auto-generated Figma files to maintain architectural integrity.",Medium,Done,Coder,2025-06-25,"Ref: TODO-021"
22,UI,Asset,"Extract SVG logo assets from Figma-exported TSX and save as clean .svg files in src/assets/logos.",High,Done,Coder,2025-06-25,"Ref: TODO-022"
23,UI,Atom,"Build a dynamic Logo component that loads the correct SVG variant based on props.",High,Done,Coder,2025-06-25,"Ref: TODO-023"
24,UI,Showcase,"Upgrade the Showcase page to display all logo variants using the new Logo component.",High,Done,Coder,2025-06-25,"Ref: TODO-024"
25,Project,Maintenance,"Remove the old Figma-exported logo TSX file from the codebase.",Medium,Done,Coder,2025-06-25,"Ref: TODO-025"
26,UI,Atom,"Refactor Button component to support all variants, sizes, and states using only theme tokens and adapter. Remove all hardcoded values.",High,Done,Coder,2025-06-25,"Button is now fully dynamic, all styles via theme/adapter, no hardcode, full architectural compliance. Ref: 24376eb"
27,UI,Showcase,"Add comprehensive 'Buttons' section to Showcase, visualizing all Button variants and states.",High,Done,Coder,2025-06-25,"Showcase now provides a live style guide for Button, covering all variants/states. Ref: 24376eb"
28,Project,Maintenance,"Remove any Figma-generated TSX button file from the codebase.",Medium,Done,Coder,2025-06-25,"No Figma TSX button file remains; codebase is clean. Ref: 24376eb"
29,UI,Asset,"Extract SVG icon assets from Figma TSX and save as clean .svg files in src/assets/icons.",High,Done,Coder,2025-06-25,"All icons extracted, fill set to currentColor, named by spec. Ref: 8a503b2f22f918a82a28eee21fb8f61670fc4f0e"
30,UI,Atom,"Build a dynamic Icon component that loads the correct SVG variant based on props.",High,Done,Coder,2025-06-25,"Icon component uses React.lazy, code-splitting, fully dynamic. Added search, arrow icons for Button compatibility. Build success. Ref: 877844b3f7541b1361c2e53f2650136ff636759d"
31,UI,Showcase,"Add comprehensive 'Icons' section to Showcase, visualizing all icon variants.",High,Done,Coder,2025-06-25,"Showcase now provides a live style guide for all icons. All icon usages build successfully. Ref: 877844b3f7541b1361c2e53f2650136ff636759d"
32,Project,Maintenance,"Remove any Figma-generated TSX icon file from the codebase.",Medium,Done,Coder,2025-06-25,"No Figma TSX icon file remains; codebase is clean. Ref: 8a503b2f22f918a82a28eee21fb8f61670fc4f0e"